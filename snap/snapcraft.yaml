name: homebridge
summary: HomeKit support for the impatient
adopt-info: homebridge
description: |
   Homebridge is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of "smart home" devices.

confinement: strict
grade: stable
architectures:
  - build-on: armhf
  - build-on: arm64
  - build-on: amd64

base: core22

# give  hook network access so it can update npm packages if needed
hooks:
  post-refresh:
      plugs:
      - network

layout:
  /usr/include:
    bind: $SNAP/usr/include
  /usr/lib/${CRAFT_ARCH_TRIPLET}/libc_nonshared.a:
    symlink: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET}/libc_nonshared.a

environment:
  npm_config_prefix:           "$SNAP_COMMON"
  npm_config_unsafe_perm:      "true"
  npm_config_global:           "true"
  npm_config_globalignorefile: "$SNAP_COMMON/npmignore"
  npm_config_globalconfig:     "$SNAP_COMMON/npmrc"
  npm_config_init_module:      "$SNAP_COMMON/.npm-init.js"
  npm_config_userconfig:       "$SNAP_COMMON/unpmrc"
  npm_config_cache:            "$SNAP_COMMON/.npm"
  PYTHON:                      "/usr/bin/python3"
  HOME:                        "$SNAP_COMMON"
  PATH:                        "$SNAP_COMMON/bin:$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH:$SNAP/usr/lib/git-core"
  LDFLAGS:                     "--verbose -L${SNAP}/usr/ -L${SNAP}/usr/lib -L${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}/"
  CFLAGS:                      "-I${SNAP}/usr/include/${CRAFT_ARCH_TRIPLET} -I${SNAP}/usr/include"
  CPPFLAGS:                    "-I${SNAP}/usr/include/${CRAFT_ARCH_TRIPLET} -I${SNAP}/usr/include"
  LD_LIBRARY_PATH:             "$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/${CRAFT_ARCH_TRIPLET}:$SNAP/usr/lib/${CRAFT_ARCH_TRIPLET}"

apps:
  homebridge:
    command-chain:
      - bin/homebridge-read-settings
      - bin/homebridge-wrapper
    command: usr/bin/homebridge
    daemon: simple
    install-mode: disable
    restart-condition: always
    plugs:
      - avahi-control
      - network-bind
      - log-observe
      - ppp
      - serial-port

  npm:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper
    plugs:
      - network

  npm-install:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper install
    plugs:
      - network

  list-installed-packages:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper ls --depth 0
    plugs:
      - network

  list-outdated-packages:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper outdated --depth 0
    plugs:
      - network

  update-all-packages:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-update-all
    plugs:
      - network

  help:
    command: bin/homebridge-help

parts:
  homebridge:
    after:
      - node
    plugin: nil
    override-build: |
      craftctl default
      PATH=${CRAFT_STAGE}/usr/bin:${PATH}
      npm install -g --unsafe-perm --prefix ${CRAFT_PART_INSTALL}/usr install \
            homebridge@latest \
            homebridge-config-ui-x@latest \
      # remove all potential .mkdir.js.swp swap file
      find ${CRAFT_PART_INSTALL} -name .mkdir.js.swp -exec rm {} \;
      # set snap version, which is homebridge version and day of build
      version=$(jq -r ".version" ${CRAFT_PART_INSTALL}/usr/lib/node_modules/homebridge/package.json)
      craftctl set version=${version}-$(date -Idate)

  glue:
    plugin: dump
    source: glue
    stage-packages:
      - build-essential
      - coreutils
      - cpp
      - g++
      - gcc
      - gettext-base
      - git
      - libavahi-compat-libdnssd-dev
      - libc6-dev
      - libcrypt-dev
      - libstdc++-11-dev
      - libtirpc-dev
      - make
      - rsync
    stage:
      - -usr/lib/${CRAFT_ARCH_TRIPLET}/libc_malloc_debug.so

  node:
    source: https://github.com/nodejs/node.git
    plugin: autotools
    override-pull: |
      # checkout lastest tag of given LTS version
      git_url="https://github.com/nodejs/node.git"
      major_ver="16"
      tag=$(git ls-remote --tags --refs  --sort='version:refname' ${git_url} | grep "refs/tags/v${major_ver}." | sort -V | tail -1 | awk -F '/' '{print $3}')
      git clone ${git_url} --depth=1 --branch ${tag} ${CRAFT_PART_SRC}
      git apply ${CRAFT_PROJECT_DIR}/node-v${major_ver}.x-snap.patch
    autotools-configure-parameters:
      - --prefix=/usr

build-packages:
  - rdfind
  - symlinks
  - systemtap-sdt-dev
  - libaudit-dev
  - g++
  - wget
  - quilt
  - gawk
  - debhelper
  - python3
  - python3-distutils
  - bison
  - libavahi-compat-libdnssd-dev
  - jq
